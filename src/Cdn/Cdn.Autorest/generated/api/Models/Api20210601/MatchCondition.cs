// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>Define match conditions</summary>
    public partial class MatchCondition :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMatchCondition,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IMatchConditionInternal
    {

        /// <summary>Backing field for <see cref="MatchValue" /> property.</summary>
        private string[] _matchValue;

        /// <summary>List of possible match values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string[] MatchValue { get => this._matchValue; set => this._matchValue = value; }

        /// <summary>Backing field for <see cref="MatchVariable" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.WafMatchVariable _matchVariable;

        /// <summary>Match variable to compare against.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.WafMatchVariable MatchVariable { get => this._matchVariable; set => this._matchVariable = value; }

        /// <summary>Backing field for <see cref="NegateCondition" /> property.</summary>
        private bool? _negateCondition;

        /// <summary>Describes if the result of this condition should be negated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public bool? NegateCondition { get => this._negateCondition; set => this._negateCondition = value; }

        /// <summary>Backing field for <see cref="Operator" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.Operator _operator;

        /// <summary>Describes operator to be matched</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.Operator Operator { get => this._operator; set => this._operator = value; }

        /// <summary>Backing field for <see cref="Selector" /> property.</summary>
        private string _selector;

        /// <summary>
        /// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string Selector { get => this._selector; set => this._selector = value; }

        /// <summary>Backing field for <see cref="Transform" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.TransformType[] _transform;

        /// <summary>List of transforms.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.TransformType[] Transform { get => this._transform; set => this._transform = value; }

        /// <summary>Creates an new <see cref="MatchCondition" /> instance.</summary>
        public MatchCondition()
        {

        }
    }
    /// Define match conditions
    public partial interface IMatchCondition :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>List of possible match values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of possible match values.",
        SerializedName = @"matchValue",
        PossibleTypes = new [] { typeof(string) })]
        string[] MatchValue { get; set; }
        /// <summary>Match variable to compare against.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Match variable to compare against.",
        SerializedName = @"matchVariable",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.WafMatchVariable) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.WafMatchVariable MatchVariable { get; set; }
        /// <summary>Describes if the result of this condition should be negated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes if the result of this condition should be negated.",
        SerializedName = @"negateCondition",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NegateCondition { get; set; }
        /// <summary>Describes operator to be matched</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Describes operator to be matched",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.Operator) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.Operator Operator { get; set; }
        /// <summary>
        /// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.",
        SerializedName = @"selector",
        PossibleTypes = new [] { typeof(string) })]
        string Selector { get; set; }
        /// <summary>List of transforms.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of transforms.",
        SerializedName = @"transforms",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.TransformType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.TransformType[] Transform { get; set; }

    }
    /// Define match conditions
    internal partial interface IMatchConditionInternal

    {
        /// <summary>List of possible match values.</summary>
        string[] MatchValue { get; set; }
        /// <summary>Match variable to compare against.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.WafMatchVariable MatchVariable { get; set; }
        /// <summary>Describes if the result of this condition should be negated.</summary>
        bool? NegateCondition { get; set; }
        /// <summary>Describes operator to be matched</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.Operator Operator { get; set; }
        /// <summary>
        /// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
        /// </summary>
        string Selector { get; set; }
        /// <summary>List of transforms.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.TransformType[] Transform { get; set; }

    }
}